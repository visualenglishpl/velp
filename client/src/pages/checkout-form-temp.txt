  // Initial customer information form
  const renderCustomerForm = () => (
    <Card className="md:col-span-1">
      <CardHeader>
        <CardTitle>Customer Information</CardTitle>
        <CardDescription>Please provide your details</CardDescription>
      </CardHeader>
      <CardContent>
        {/* Unit Selection UI that appears directly in the checkout form */}
        {planType === 'single_lesson' && (
          <div className="mb-6 border-b pb-6">
            <UnitSelection
              selectedBookId={selectedBookId}
              selectedUnits={selectedUnits}
              setSelectedUnits={setSelectedUnits}
              multipleUnits={multipleUnits}
              setMultipleUnits={setMultipleUnits}
              billingCycle={billingCycle}
              bookOptions={allBooks}
              onSelectBook={setSelectedBookId}
            />
          </div>
        )}

        <form 
          className="space-y-4"
          onSubmit={(e) => {
            e.preventDefault();
            setIsLoading(true);
          }}
        >
          <div className="space-y-2">
            <Label htmlFor="name">Full Name</Label>
            <Input 
              id="name" 
              name="name" 
              placeholder="John Doe" 
              required 
              value={customerInfo.name}
              onChange={handleInputChange}
            />
          </div>

          <div className="space-y-2">
            <Label htmlFor="email">Email</Label>
            <Input 
              id="email" 
              name="email" 
              type="email" 
              placeholder="john@example.com" 
              required
              value={customerInfo.email}
              onChange={handleInputChange}
            />
          </div>

          {planType === 'printed_book' && (
            <>
              <Separator className="my-4" />
              <h3 className="font-medium mb-4">Shipping Address</h3>
              
              <div className="space-y-2">
                <Label htmlFor="address">Address</Label>
                <Input 
                  id="address" 
                  name="address" 
                  placeholder="123 Example St" 
                  required
                  value={customerInfo.address}
                  onChange={handleInputChange}
                />
              </div>

              <div className="grid grid-cols-2 gap-4">
                <div className="space-y-2">
                  <Label htmlFor="city">City</Label>
                  <Input 
                    id="city" 
                    name="city" 
                    placeholder="City" 
                    required
                    value={customerInfo.city}
                    onChange={handleInputChange}
                  />
                </div>
                <div className="space-y-2">
                  <Label htmlFor="postalCode">Postal Code</Label>
                  <Input 
                    id="postalCode" 
                    name="postalCode" 
                    placeholder="12345" 
                    required
                    value={customerInfo.postalCode}
                    onChange={handleInputChange}
                  />
                </div>
              </div>

              <div className="space-y-2">
                <Label htmlFor="country">Country</Label>
                <Input 
                  id="country" 
                  name="country" 
                  placeholder="Country" 
                  required
                  value={customerInfo.country}
                  onChange={handleInputChange}
                />
              </div>
            </>
          )}

          <CardFooter className="flex justify-end px-0 pt-4">
            <Button type="submit" className="w-full">
              Continue to Payment
            </Button>
          </CardFooter>
        </form>
      </CardContent>
    </Card>
  );